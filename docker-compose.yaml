services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - data:/data/db
      - config:/data/configdb
      - log:/var/log/mongodb
      
#  mongo-express:
#    image: mongo-express:latest
#    container_name: mongo-express
#    restart: always
#
#    env_file:
#      - .env
#
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
#      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
#      ME_CONFIG_MONGODB_PORT: 27017
#      ME_CONFIG_MONGODB_SERVER: "mongodb"
#      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
#      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
#
#    ports:
#      - 8081:8081
#
#    networks:
#      - mongodb
#
#    depends_on:
#      - mongodb

volumes:
  data:
  config:
  log:

networks:
  mongodb:
    name: mongodb
